const fs = require("fs");

const lowerCaseFirst = (str) => str.charAt(0).toLowerCase() + str.slice(1);

const formatArgs = (args) => {
  const formatted = [];
  for (const arg of args) {
    formatted.push(`${arg.name} : ${arg.type}`);
  }
  return "(" + formatted.join(", ") + ")";
};

const formatRet = (ret) => {
  if (ret.length == 0) {
    return "void";
  }

  return ret.map((r) => r.type).join(" | ");
};

try {
  const data = fs.readFileSync(
    "../suffiks/extension/wasi/wasi_env.json",
    "utf8"
  );

  const env = JSON.parse(data);

  const lines = [
    "// This file was autogenerated by create-env.js",
    "",
    "export namespace Host {",
    "\texport type uint32 = u32;",
    "\texport type uint64 = u64;",
    "",
  ];

  for (const key in env) {
    const decl = env[key];
    lines.push("\t// @ts-ignore decorators are valid here");
    lines.push(`\t@external("suffiks", "${decl.name}")`);
    lines.push(
      `\texport declare function ${lowerCaseFirst(decl.name)}` +
        `${formatArgs(decl.args)}: ` +
        `${formatRet(decl.return)};`
    );
  }

  lines.push("}", "");

  fs.writeFileSync("assembly/suffiks/env.ts", lines.join("\n"));
} catch (err) {
  console.error(err);
}
